4 / 32
read_csv('update_vals.csv')
library(tidyverse)
update_vals <- read_csv('update_vals.csv')
update_vals
ggplot(update_vals, aes(update_frequency, avg_error)) + geom_line()
ggplot(update_vals, aes(update_frequency, avg_error)) + geom_line() + geom_point()
update_vals <- read_csv('update_vals.csv')
update_vals
update_vals <- read_csv('update_vals.csv') %>%
select(-X1)
update_vals
update_vals <- read_csv('update_vals.csv') %>%
select(-X1)
c_chart <- ggplot(update_vals, aes(update_frequency, avg_error)) +
geom_point() + geom_line() + theme_classic() +
xlab('C (target network update frequency)') + ylab('Average Reward') +
ggtitle('Average Reward vs. Update Frequency \100 training episodes and 50 test episodes') +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"))
c_chart
c_chart <- ggplot(update_vals, aes(update_frequency, avg_error)) +
geom_point() + geom_line() + theme_classic() +
xlab('C (target network update frequency)') + ylab('Average Reward') +
ggtitle('Average Reward vs. Update Frequency \n100 training episodes and 50 test episodes') +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"))
c_chart <- ggplot(update_vals, aes(update_frequency, avg_error)) +
geom_point() + geom_line() + theme_classic() +
xlab('C (target network update frequency)') + ylab('Average Reward') +
ggtitle('Average Reward vs. Update Frequency \n100 training episodes and 50 test episodes') +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"))
c_chart
update_vals <- read_csv('update_vals.csv') %>%
select(-X1)
c_chart <- ggplot(update_vals, aes(update_frequency, avg_error)) +
geom_point() + geom_line() + theme_classic() +
xlab('C (target network update frequency)') + ylab('Average Reward') +
ggtitle('Average Reward vs. Update Frequency \n100 training episodes and 50 test episodes') +
theme(plot.title = element_text(hjust = 0.5, size = 12, face = "bold"))
c_chart
update_vals
?grid.arrange
q_learner <- import_data('q_learner.csv')
# Load packages, read in data, and create charts
library(tidyverse)
library(gridExtra)
# Functions for plotting and importing data
lc_plot <- function(data, title){
ggplot(data, aes(episode, q_diff)) +
geom_line() + theme_classic() +
xlab('Simulation Iteration (1 = 100,000 timesteps)') + ylab('Q-Value Difference') +
ggtitle(title) +
theme(plot.title = element_text(hjust = 0.5, size = 8, face = "bold"),
axis.title = element_text(size = 8)) +
scale_y_continuous(breaks = seq(0, 0.5, 0.05),
limits = c(0, 0.5)) +
scale_x_continuous(breaks = seq(0, 10, 1))
}
import_data <- function(filename){
read_csv(filename) %>%
select(-X1) %>%
mutate(episode = episode / (10 ** 5))
}
q_learner <- import_data('q_learner.csv')
friend_q <- import_data('friend_q.csv')
foe_q <- import_data('foe_q.csv')
correlated_q <- import_data('correlated_q.csv')
q_plot <- lc_plot(q_learner, 'Q-Learner')
friend_plot <- lc_plot(friend_q, 'Friend-Q')
foe_plot <- lc_plot(foe_q, 'Foe-Q')
correlated_plot <- lc_plot(correlated_q, 'Correlated-Q')
grid.arrange(correlated_plot, foe_plot, friend_plot, q_plot, ncol = 2)
?install.packages
library(vitae)
read_csv("education.csv") %>%
detailed_entries(degree, year, institution, location, experience)
library(tidyverse)
ed <- read_csv("education.csv")
setwd('/home/clundberg/Development/R Projects/resume/')
ed <- read_csv("education.csv")
ed
test <- ed[1,]$experience
test
test <- 'relevant coursework: Artificial Intelligence, Reinforcement Learning, Computer Vision, AI for AI for Robotics'
test
test <- 'relevant coursework: Artificial Intelligence, Reinforcement Learning, Computer Vision, AI for Robotics'
test
ed
ed[1,]$experience <- test
ed
write_csv(ed, 'education.csv')
ed <- read_csv("education.csv")
test <- 'relevant coursework: Artificial Intelligence, Reinforcement Learning, Computer Vision, Artificial Intelligence for Robotics'
ed[1,]$experience <- test
write_csv(ed, 'education.csv')
